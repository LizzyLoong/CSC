1.
a ? b : c 
语法含义：
如果a为真，则返回b
如果a为假，则返回c
等价于
if(a)   return b;
else    return c;
常用于赋值，如
int n2= l2 ? l2->val : 0;//该语句在第二题中出现过原句
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2.
if(a)    if(!b)
这里只需要记住：数字不为 0 即为 true ，为 0 即为 false
也就是说，
if(a)  等价于  if(a!=0)    
即：
当a  != 0时，同时也是 a!=0 为 true 时，运行该 if
当a  == 0时，同时也是 a!=0 为 false 时，不运行该 if
if(!b) 等价于  if(!b!=0)
即：//设 b=1 ,则 !b==0 为 true
当!b != 0时，同时也是 b==0 为 true 时，运行该 if
当!b == 0时，同时也是 b!=0 为 false 时，不运行该 if
//注意，当在IDE中输入 !b!=0 时，会在第一个 ! 处提醒 “ 使用了逻辑“!”,而需要的可能是按位“~” ”
//这里不用管它，也能运行。但是也可以改成 ~b!=0。同样可以运行
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
3.~运算符
取反运算符，按二进制位进行"取反"运算。运算规则：
~1=-2;   
~0=-1;
这里要用到二进制的知识
同样的要举出一些二进制运算符
&  与
|  或
^  异或(不同为真)
~  位反(按位取反)
<< 二进制左移运算符。将一个运算对象的各二进制位全部左移若干位（左边的二进制位丢弃，右边补0）。
>> 二进制右移运算符。将一个数的各二进制位全部右移若干位，正数左补0，负数左补1，右边丢弃
/*
A=0011 1100
A<<2 == 1111 0000 = 240
A>>2 == 0000 1111 = 15
*/
<<=     C <<= 2 等同于 C = C<<2
>>=     C >>= 2 等同于 C = C>>2
&=      C &= 2  等同于 C = C&2
|=      C |= 2  等同于 C = C|2
^=      C ^= 2  等同于 C = C^2
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////